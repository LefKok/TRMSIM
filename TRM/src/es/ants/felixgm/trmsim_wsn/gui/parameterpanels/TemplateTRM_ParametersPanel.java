/**
 *  "TRMSim-WSN, Trust and Reputation Models Simulator for Wireless
 * Sensor Networks" is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version always keeping
 * the additional terms specified in this license.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 *
 * Additional Terms of this License
 * --------------------------------
 *
 * 1. It is Required the preservation of specified reasonable legal notices
 *   and author attributions in that material and in the Appropriate Legal
 *   Notices displayed by works containing it.
 *
 * 2. It is limited the use for publicity purposes of names of licensors or
 *   authors of the material.
 *
 * 3. It is Required indemnification of licensors and authors of that material
 *   by anyone who conveys the material (or modified versions of it) with
 *   contractual assumptions of liability to the recipient, for any liability
 *   that these contractual assumptions directly impose on those licensors
 *   and authors.
 *
 * 4. It is Prohibited misrepresentation of the origin of that material, and it is
 *   required that modified versions of such material be marked in reasonable
 *   ways as different from the original version.
 *
 * 5. It is Declined to grant rights under trademark law for use of some trade
 *   names, trademarks, or service marks.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program (lgpl.txt).  If not, see <http://www.gnu.org/licenses/>
*/

package es.ants.felixgm.trmsim_wsn.gui.parameterpanels;

import es.ants.felixgm.trmsim_wsn.trm.TRMParameters;
import es.ants.felixgm.trmsim_wsn.trm.templatetrm.TemplateTRM_Parameters;

/**
 * <p>This class represents the panel used to retrieve the parameters of TemplateTRM</p>
 * @author <a href="http://ants.dif.um.es/~felixgm/en" target="_blank">F&eacute;lix G&oacute;mez M&aacute;rmol</a>, <a href="http://webs.um.es/gregorio" target="_blank">Gregorio Mart&iacute;nez P&eacute;rez</a>
 * @version 0.3
 * @since 0.3
 */
public class TemplateTRM_ParametersPanel extends TRMParametersPanel {

    /** Creates new form TemplateTRM_ParametersPanel */
    public TemplateTRM_ParametersPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        threshold_maxTextField = new javax.swing.JTextField();
        threshold_maxSlider = new javax.swing.JSlider();
        threshold_maxLabel = new javax.swing.JLabel();
        threshold_minTextField = new javax.swing.JTextField();
        threshold_minSlider = new javax.swing.JSlider();
        threshold_minLabel = new javax.swing.JLabel();
       
       
        threshold_maxTextField.setEditable(true);
        threshold_maxTextField.setText("0.8");
        threshold_maxTextField.setPreferredSize(new java.awt.Dimension(45, 25));
        
        threshold_minTextField.setEditable(true);
        threshold_minTextField.setText("0.4");
        threshold_minTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        threshold_maxSlider.setMaximum(100);
        threshold_maxSlider.setValue(80);
        threshold_maxSlider.setEnabled(false);
        threshold_maxSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        threshold_maxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                threshold_maxSliderStateChanged(evt);
            }
        });
        threshold_maxLabel.setText("threshold_max");
        threshold_maxLabel.setEnabled(false);
        
        threshold_minSlider.setMaximum(100);
        threshold_minSlider.setValue(40);
        threshold_minSlider.setEnabled(false);
        threshold_minSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        threshold_minSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                threshold_minSliderStateChanged(evt);
            }
        });
        threshold_minLabel.setText("threshold_min");
        threshold_minLabel.setEnabled(false);
        

       
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(threshold_maxLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(threshold_maxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threshold_maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(threshold_minLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(threshold_minSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threshold_minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(threshold_maxLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(threshold_maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threshold_maxSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(threshold_minLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(threshold_minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threshold_minSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private void threshold_maxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_threshold_maxSliderStateChanged
        threshold_maxTextField.setText(String.valueOf(threshold_maxSlider.getValue()/(double)threshold_maxSlider.getMaximum()));
}//GEN-LAST:event_threshold_maxSliderStateChanged
    
    private void threshold_minSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_threshold_maxSliderStateChanged
        threshold_minTextField.setText(String.valueOf(threshold_minSlider.getValue()/(double)threshold_minSlider.getMaximum()));
}//GEN-LAST:event_threshold_maxSliderStateChanged
    
    protected double get_threshold_max() {
        return Double.valueOf(threshold_maxTextField.getText());
    }

    /**
     * Sets threshold_max parameter into its corresponding field in the panel
     * @param threshold_max threshold_max parameter value to be set
     */
    protected void set_threshold_max(double threshold_max) {
        threshold_maxSlider.setValue((int)(threshold_max*threshold_maxSlider.getMaximum()));
    }
    protected double get_threshold_min() {
        return Double.valueOf(threshold_minTextField.getText());
    }

    /**
     * Sets threshold_max parameter into its corresponding field in the panel
     * @param threshold_max threshold_max parameter value to be set
     */
    protected void set_threshold_min(double threshold_min) {
        threshold_minSlider.setValue((int)(threshold_min*threshold_minSlider.getMaximum()));
    }
    @Override
    public TRMParameters get_TRMParameters() {
        TemplateTRM_Parameters templateTRMParameters = new TemplateTRM_Parameters();
        templateTRMParameters.setThreshold_max(get_threshold_max());
        templateTRMParameters.setThreshold_min(get_threshold_min());


        return templateTRMParameters;
    }

    @Override
    public void set_TRMParameters(TRMParameters trmParameters) {
        TemplateTRM_Parameters templateTRMParameters = new TemplateTRM_Parameters();

        set_threshold_max(templateTRMParameters.getThreshold_max());
        set_threshold_min(templateTRMParameters.getThreshold_min());
    }

    @Override
    public void setEnabled(boolean enabled) {
    	
    	threshold_maxLabel.setEnabled(enabled);
        threshold_maxSlider.setEnabled(enabled);
        threshold_minLabel.setEnabled(enabled);
        threshold_minSlider.setEnabled(enabled);
        

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel threshold_maxLabel;
    private javax.swing.JSlider threshold_maxSlider;
    private javax.swing.JTextField threshold_maxTextField;
    private javax.swing.JLabel threshold_minLabel;
    private javax.swing.JSlider threshold_minSlider;
    private javax.swing.JTextField threshold_minTextField;
    // End of variables declaration//GEN-END:variables
}